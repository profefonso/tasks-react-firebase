{"version":3,"sources":["Firebase.js","components/Navigation.js","components/TaskForm.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navigation","react_default","a","createElement","className","href","this","props","tittle","num_task","Component","TaskForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","assigned","description","priority","handleInputChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","onAddTask","setState","_e$target","target","value","name","defineProperty","onSubmit","type","onChange","placeholder","App","onCollectionUpdate","querySnapshot","tasks","forEach","doc","_doc$data","data","push","key","id","ref","firestore","collection","unsubscribe","show","handleAddTask","handleShow","handleClose","onSnapshot","index","delete","then","console","log","catch","error","filter","i","task","add","_this2","map","onClick","removeTask","components_Navigation","length","components_TaskForm","Button_default","variant","Modal_default","onHide","Header","closeButton","Title","Body","Footer","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.35f9dbfd.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCkpaMrdfeQU8aT3a1qRq4Ipppw0mTYqEY\",\n    authDomain: \"task-alfonso-firebase.firebaseapp.com\",\n    databaseURL: \"https://task-alfonso-firebase.firebaseio.com\",\n    projectId: \"task-alfonso-firebase\",\n    storageBucket: \"\",\n    messagingSenderId: \"343861534112\",\n    appId: \"1:343861534112:web:7623ca5643410bae\"\n  };\n  firebase.initializeApp(config);\n  \n  export default firebase;","import React, { Component } from 'react';\n\n\nclass Navigation extends Component {\n    render(){\n        return(\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <a href=\"https://www.google.com\" className=\"text-white\">\n                    { this.props.tittle }\n                    <span className=\"badge badge-pill badge-light ml-2\">\n                        { this.props.num_task }\n                    </span>\n                </a>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react'\n\n\nclass TaskForm extends Component {\n    constructor () {\n        super();\n        this.state = {\n          tittle: '',\n          assigned: '',\n          description: '',\n          priority: 'low'\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleSubmit(e) {\n        e.preventDefault();\n        this.props.onAddTask(this.state);\n        this.setState({\n          tittle: '',\n          assigned: '',\n          description: '',\n          priority: 'low'\n        });\n      }\n    \n      handleInputChange(e) {\n        const {value, name} = e.target;\n        this.setState({\n          [name]: value\n        });\n      }\n    \n      render() {\n        return (\n          <div className=\"card\">\n            <form onSubmit={this.handleSubmit} className=\"card-body\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"tittle\"\n                  className=\"form-control\"\n                  value={this.state.tittle}\n                  onChange={this.handleInputChange}\n                  placeholder=\"Tittle\"\n                  />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"assigned\"\n                  className=\"form-control\"\n                  value={this.state.assigned}\n                  onChange={this.handleInputChange}\n                  placeholder=\"Assigned\"\n                  />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  className=\"form-control\"\n                  value={this.state.description}\n                  onChange={this.handleInputChange}\n                  placeholder=\"description\"\n                  />\n              </div>\n              <div className=\"form-group\">\n                <select\n                    name=\"priority\"\n                    className=\"form-control\"\n                    value={this.state.priority}\n                    onChange={this.handleInputChange}\n                  >\n                  <option>low</option>\n                  <option>medium</option>\n                  <option>high</option>\n                </select>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Save\n              </button>\n            </form>\n          </div>\n        )\n      }\n}\n\nexport default TaskForm;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport firebase from './Firebase';\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport Navigation from './components/Navigation'\nimport TaskForm from './components/TaskForm'\n\n//import { tasks } from './tasks.json'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('tasks');\n    this.unsubscribe = null;\n    this.state = {\n      tasks: [],\n      show: false,\n    };\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const tasks = [];\n    querySnapshot.forEach((doc) => {\n      const { tittle, assigned, description, priority } = doc.data();\n      tasks.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        tittle,\n        assigned,\n        description,\n        priority,\n      });\n    });\n    this.setState({\n      tasks\n   });\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  removeTask(index, key) {\n    firebase.firestore().collection('tasks').doc(key).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n    }).catch((error) => {\n      console.error(\"Error removing document: \", error);\n    });\n    this.setState({\n      tasks: this.state.tasks.filter((e, i) => {\n        return i !== index\n      })\n    });\n  }\n\n  handleAddTask(task) {\n    this.ref.add({\n      tittle: task.tittle,\n      assigned: task.assigned,\n      description: task.description,\n      priority: task.priority\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n    /*this.setState({\n      tasks: [...this.state.tasks, task]\n    })*/\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  render(){\n    const task = this.state.tasks.map((task, i) => {\n      return (\n        <div key={i} className=\"col-md-4\">\n          <div className=\"card bg-dark text-white border-warning mt-4\">\n            <div className=\"card-header\">\n              <h3>{ task.tittle }</h3>\n              <span className=\"badge badge-pill badge-danger ml-2\">\n                { task.priority }\n              </span>\n            </div>\n            <div className=\"card-body\">\n              <p>{ task.description }</p>\n              <p><mark>{ task.assigned }</mark></p>\n            </div>\n            <div className=\"card-footer\">\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.removeTask.bind(this, i, task.key)}>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )\n    })\n\n    return (\n      <div className=\"App\">\n        <Navigation tittle='Tasks' num_task={ this.state.tasks.length }/>\n\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n\n            <div className=\"col-md-4 text-center\">\n              <TaskForm onAddTask={ this.handleAddTask }></TaskForm>\n            </div>\n\n            <div className=\"col-md-8\">\n              <div className=\"row\">\n                { task }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Button variant=\"primary\" onClick={this.handleShow}>\n          Launch demo modal\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        \n\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}